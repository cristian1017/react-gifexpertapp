{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","c","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OACI,sBAAMC,OAAO,GAAGC,SAZC,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAQ,GAC1BT,GAAc,SAAAU,GAAC,OAAKR,GAAL,mBAAoBQ,OACnCP,EAAc,KAEdQ,QAAQC,IAAI,UAKhB,SACI,uBACIC,KAAK,OACLC,MAAOZ,EACPa,SApBc,SAACT,GACvBH,EAAcG,EAAEU,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,mDACqCC,UAAUH,GAD/C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCWLO,EATK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACzB,OACI,sBAAKc,UAAU,yCAAf,UACA,qBAAKC,IAAKf,EAAKgB,IAAKN,IAChB,4BAAIA,QCuBDO,EAxBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAY,IAAD,EACVjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAgBpC,OAVAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAd,GACCY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAG3B,CAACpB,IAEIqB,EDXwBI,CAAazB,GAAhCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,qCACzB,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aES1Be,EAzBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,WADvB,mBAChB4C,EADgB,KACJ7C,EADI,KAQvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACA,6BAEQ6C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCftC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.33465a2e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log('Submit echo');\n        if( inputValue.trim().length> 2){\n            setCategories(c => [inputValue, ...c]);\n            setInputValue('');\n        } else {\n            console.log('ERROR')\n        }\n    }\n\n    return (\n        <form action=\"\" onSubmit={handleSubmit }>\n            <input \n                type=\"text\" \n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n//PropTypes\nAddCategory.propTypes= {\n    setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","\nexport const getGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/trending?q=${encodeURI(category)}&limit=10&api_key=B7IMfyTNjP0qDju8Yfc7Io5gdNXZy3LD`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img=>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n    return gifs;\n}","\nimport React from 'react'\n\nconst GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n        <img src={url} alt={title}/>\n            <p>{title}</p>\n    </div>\n\n    )\n}\nexport default GifGridItem;\n\n\n\n\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\n\n\nconst GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n\n    return(\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>  \n\n            {loading && <p className=\"animate__animated animate__flash\"></p>}\n            <div className=\"card-grid\">\n                    {\n                        images.map(img => (\n                            <GifGridItem\n                                key={img.id} \n                                {...img}\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n} \n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category)=>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs( category )\n            .then( img=>{\n                    setState({\n                        data: img,\n                        loading: false\n                    }) \n            })\n    },[category]);\n    \n    return state;\n} ","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Naruto']);\n\n    // const handleAdd =  ()=> {\n    //     // setCategories([...categories, 'Naruto']);\n    //     setCategories(c => [...categories, 'Naruto'])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>   \n            <AddCategory setCategories={setCategories}/>\n            {/* <AddCategory/> */}\n            <hr/> \n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid key={category} category={category}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//GIfExpertApp\n"],"sourceRoot":""}